   * [Docker](#docker)
      * [Running a containerized Java application](#running-a-containerized-java-application)
      * [Network and ports](#network-and-ports)
         * [List network types](#list-network-types)
         * [Create a new network](#create-a-new-network)
         * [inspect a network](#inspect-a-network)
         * [Run Apache Tomcat for the newly created network](#run-apache-tomcat-for-the-newly-created-network)
         * [Run a busybox with the same network as myTomcat container](#run-a-busybox-with-the-same-network-as-mytomcat-container)
         * [Check if we can reach the tomcat webserver from the busybox](#check-if-we-can-reach-the-tomcat-webserver-from-the-busybox)
         * [Bind your host port to the container](#bind-your-host-port-to-the-container)
         * [Map a random port to the exposed container port](#map-a-random-port-to-the-exposed-container-port)
         * [Find out the randomly allocated port](#find-out-the-randomly-allocated-port)
      * [Volumes](#volumes)
         * [Specify a local path for container volume](#specify-a-local-path-for-container-volume)
         * [Create a standalone named volume](#create-a-standalone-named-volume)
         * [Map the volume to containers](#map-the-volume-to-containers)
         * [Remove a volume](#remove-a-volume)
      * [Dockerfile](#dockerfile)
         * [Build the docker with the Dockerfile provided in this repository](#build-the-docker-with-the-dockerfile-provided-in-this-repository)
         * [Run the newly built image (rest-example)](#run-the-newly-built-image-rest-example)
         * [Build the ping-example container from Dockerfile](#build-the-ping-example-container-from-dockerfile)
         * [Run container in detached mode](#run-container-in-detached-mode)
         * [Attach to the detached container](#attach-to-the-detached-container)
         * [View logs of the running container](#view-logs-of-the-running-container)
         * [Specify the log driver to write logs to](#specify-the-log-driver-to-write-logs-to)
         * [Inspect a container](#inspect-a-container)
         * [Inspect containers using Go template engine](#inspect-containers-using-go-template-engine)
         * [Fetch the IP address from the metadata of the container](#fetch-the-ip-address-from-the-metadata-of-the-container)
         * [Get stats of all (not only running) the containers](#get-stats-of-all-not-only-running-the-containers)
         * [Fetch container events](#fetch-container-events)
         * [Restart a container after it is shut down (in every case)](#restart-a-container-after-it-is-shut-down-in-every-case)
         * [Restart a container after it is shut down (with a non-zero exit status)](#restart-a-container-after-it-is-shut-down-with-a-non-zero-exit-status)
         * [Get the number of restarts of a container](#get-the-number-of-restarts-of-a-container)
         * [Discover the last time the container was started again](#discover-the-last-time-the-container-was-started-again)
         * [Updating a restart policy on a running container](#updating-a-restart-policy-on-a-running-container)
         * [Restrict the memory to 512 MB for the container](#restrict-the-memory-to-512-mb-for-the-container)
         * [Set memory reservation without setting the hard memory limit](#set-memory-reservation-without-setting-the-hard-memory-limit)
         * [Set the Kernel memory limit](#set-the-kernel-memory-limit)
         * [Setting user memory and kernel memory for a container](#setting-user-memory-and-kernel-memory-for-a-container)
         * [Set memory swappiness constraint for a container (0 to disable swaps, 100 all anonymous pages to swap out)](#set-memory-swappiness-constraint-for-a-container-0-to-disable-swaps-100-all-anonymous-pages-to-swap-out)
         * [Set the CPU usage limit for a container to 50\x of the CPU resource](#set-the-cpu-usage-limit-for-a-container-to-50-of-the-cpu-resource)
         * [Constraint the container to get 50\x of the CPU usage every 50ms](#constraint-the-container-to-get-50-of-the-cpu-usage-every-50ms)
         * [Set the number of CPU cores to be used by the container](#set-the-number-of-cpu-cores-to-be-used-by-the-container)
         * [Updating constrains of a running container](#updating-constrains-of-a-running-container)
   * [Java Microservices](#java-microservices)
         * [Using Maven to generate Docker images (without Dockerfile)](#using-maven-to-generate-docker-images-without-dockerfile)
         * [Using Maven to start a container](#using-maven-to-start-a-container)
         * [Using Maven to run a container](#using-maven-to-run-a-container)

<!-- Added by: dawan, at: Thu  2 May 2019 23:38:33 BST -->

